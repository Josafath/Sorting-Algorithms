/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Menu;


import Algorithms.Shell_Sort;
import Algorithms.Quick_Sort;
import Algorithms.Merge_Sort;
import Algorithms.Insertion_Sort;
import Algorithms.Bubble_Sort;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
public class Principal extends javax.swing.JFrame {

    private final Quick_Sort Algo_QuickSort;
    
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        Algo_QuickSort = new Quick_Sort();
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Opciones = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        Input = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Resultado_Ordenado = new javax.swing.JEditorPane();
        Ordenado_Label = new javax.swing.JLabel();
        Texto_Time = new javax.swing.JLabel();
        Texto_Cantidad = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sorting Algorithms", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Sitka Text", 3, 18))); // NOI18N

        Opciones.setFont(new java.awt.Font("Sitka Text", 2, 18)); // NOI18N
        Opciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bubble Sort", "Insertion Sort", "QuickSort", "Merge Sort", "ShellSort" }));
        Opciones.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.white, java.awt.Color.lightGray));
        Opciones.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Opciones.setOpaque(false);
        Opciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpcionesActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Sitka Text", 2, 14)); // NOI18N
        jButton1.setText("Abrir Archivo");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, null, null));
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Input.setFont(new java.awt.Font("SimSun", 2, 14)); // NOI18N
        Input.setToolTipText("");
        Input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Sitka Text", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Ingresa los elementos separados por una coma");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Sitka Text", 2, 18)); // NOI18N
        jLabel2.setText("¿Muchos datos por ordenar?");

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Sitka Text", 2, 14)); // NOI18N
        jButton2.setText("Ejecutar Algoritmo");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, null, null));
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        Resultado_Ordenado.setEditable(false);
        Resultado_Ordenado.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jScrollPane1.setViewportView(Resultado_Ordenado);

        Ordenado_Label.setFont(new java.awt.Font("Sitka Text", 2, 18)); // NOI18N
        Ordenado_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Texto_Time.setBackground(new java.awt.Color(255, 255, 255));
        Texto_Time.setFont(new java.awt.Font("Sitka Text", 2, 18)); // NOI18N
        Texto_Time.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Texto_Time.setText("Tiempo de Ejecución:");

        Texto_Cantidad.setBackground(new java.awt.Color(255, 255, 255));
        Texto_Cantidad.setFont(new java.awt.Font("Sitka Text", 2, 18)); // NOI18N
        Texto_Cantidad.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(Opciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addContainerGap(43, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(153, 153, 153))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Texto_Time, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                    .addComponent(Texto_Cantidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Ordenado_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Opciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Texto_Time, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(Ordenado_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(7, 7, 7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Texto_Cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(75, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooserfile = new JFileChooser();        
        chooserfile.showOpenDialog(null);
        try {
            File file = chooserfile.getSelectedFile();
            Scanner myReader = new Scanner(file);
            String element="";
            while(myReader.hasNextLine()){
                element = myReader.nextLine();
            }
            String[] arrOfStr = element.split(",");
            int [] Array = new int[arrOfStr.length];
            int index = 0;
            for(String e: arrOfStr){
                Array[index] = Integer.parseInt(e);
                index++;
            }
            String opcion = String.valueOf(Opciones.getSelectedItem());
            if(opcion.equals("Bubble Sort")){
                Bubble_Sort algo_bubble = new Bubble_Sort(Array);
                algo_bubble.ordenar();
                algo_bubble.writeArray(Array, Array.length);
                
            }
            else if(opcion.equals("Insertion Sort")){
                Insertion_Sort algo_insert = new Insertion_Sort(Array);
                algo_insert.ordenar_insertion();
                algo_insert.writeArray(Array, Array.length);
            }
            else if(opcion.equals("QuickSort")){
                int n = Array.length-1;
                Quick_Sort algo_quicksort = new Quick_Sort();
                algo_quicksort.quickSort(Array, 0, n);
                algo_quicksort.writeArray(Array, n);
            }
            else if(opcion.equals("Merge Sort")){
                int n = Array.length-1;
                Merge_Sort algo_merge = new Merge_Sort();
                algo_merge.ordenar(Array, n, n);
                algo_merge.writeArray(Array, n);
            }
            else if(opcion.equals("ShellSort")){
                Shell_Sort algo_shell = new Shell_Sort();
                algo_shell.ordenar(Array);
                algo_shell.writeArray(Array, index);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void OpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpcionesActionPerformed
        
    }//GEN-LAST:event_OpcionesActionPerformed

    private void InputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String opcion = String.valueOf(Opciones.getSelectedItem());
        String datos = Input.getText();
        if(datos.isEmpty()){
            JOptionPane.showMessageDialog(null,"Campo Vacío ","E R R O R",JOptionPane.ERROR_MESSAGE);
        }
        else{
            String[] arrOfStr = datos.split(",");
            int[] Array = new int[arrOfStr.length];
            for (int i = 0; i <arrOfStr.length; i++) {
                Array[i] = Integer.parseInt(arrOfStr[i]);
            }
            if(opcion.equals("Bubble Sort")){
                Bubble_Sort algo_bubble = new Bubble_Sort(Array);
                long startTime = System.nanoTime();
                algo_bubble.ordenar();
                long stopTime = System.nanoTime();
                Texto_Cantidad.setText((stopTime - startTime)+" Nanosegundos");
                Ordenado_Label.setText("Resultado con " + opcion +": ");
                Resultado_Ordenado.setText(algo_bubble.toString());
        }
            else if(opcion.equals("Insertion Sort")){
                Insertion_Sort algo_insert = new Insertion_Sort(Array);
                long startTime = System.nanoTime();
                algo_insert.ordenar_insertion();
                long stopTime = System.nanoTime();
                Texto_Cantidad.setText((stopTime - startTime)+" Nanosegundos");
                Ordenado_Label.setText("Resultado con " + opcion +": ");
                Resultado_Ordenado.setText(algo_insert.toString());
            }
            else if(opcion.equals("QuickSort")){
                int n = Array.length-1;
                Quick_Sort algo_quicksort = new Quick_Sort();
                long startTime = System.nanoTime();
                algo_quicksort.quickSort(Array,0,n);
                long stopTime = System.nanoTime();
                Texto_Cantidad.setText((stopTime - startTime)+" Nanosegundos");
                Ordenado_Label.setText("Resultado con " + opcion +": ");
                Resultado_Ordenado.setText(algo_quicksort.printArray(Array, n));
            }
            else if(opcion.equals("Merge Sort")){
                int n = Array.length-1;
                Merge_Sort algo_merge = new Merge_Sort();
                long startTime = System.nanoTime();
                algo_merge.ordenar(Array,0,n);
                long stopTime = System.nanoTime();
                Texto_Cantidad.setText((stopTime - startTime)+" Nanosegundos");
                Ordenado_Label.setText("Resultado con " + opcion +": ");
                Resultado_Ordenado.setText(algo_merge.printArray(Array, n));
            }
            else if(opcion.equals("ShellSort")){
                Shell_Sort algo_shell = new Shell_Sort();
                long startTime = System.nanoTime();
                algo_shell.ordenar(Array);
                long stopTime = System.nanoTime();
                Texto_Cantidad.setText((stopTime - startTime)+" Nanosegundos");
                Ordenado_Label.setText("Resultado con " + opcion +": ");
                Resultado_Ordenado.setText(algo_shell.printArray(Array, Array.length));
            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Input;
    private javax.swing.JComboBox<String> Opciones;
    private javax.swing.JLabel Ordenado_Label;
    private javax.swing.JEditorPane Resultado_Ordenado;
    private javax.swing.JLabel Texto_Cantidad;
    private javax.swing.JLabel Texto_Time;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
